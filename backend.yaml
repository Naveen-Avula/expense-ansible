- name: configure backend server
  become: yes
  hosts: backend
  vars:
    login_host: 18.212.49.96 
    login_password: ExpenseApp@1

  tasks:
  - name: disable default node js
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable nodejs:20
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install node js
    ansible.builtin.dnf: # only works for red hat family so it homo geneous
      name: nodejs
      state: installed
      
  - name: create expense user
    ansible.builtin.user:
     name: expense
  - name: create app directory
    ansible.builtin.file:
      path: /app # The desired path for the new directory
      state: directory

  - name: downloading backend code
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip
  
  - name: unzip backend code
    ansible.builtin.unarchive:
      src: /tmp/backend.zip # by default chcecks in ansible server
      dest: /app
      remote_src: yes

  - name: install npm dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app

  - name: copy backend service
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: install python mysql dependencies
    ansible.builtin.pip:
      name:
      - PyMySQL # to connect mysql DB to ansible
      - cryptography
      executable: pip3.9  
      # pip3.11 if python version is 3.11

  - name: import data into mysql
    community.mysql.mysql_db:
      login_user: root
      login_password: "{{ login_password }}"
      login_host: "{{ login_host }}"
      target: /app/schema/backend.sql
      state: dump
      name: all