- name: configure db server
  hosts: db
  become: yes
  vars:
    login_host: 18.212.49.96            # public ipv4 ..not private ip and in inventory given private ip
  vars_prompt:
  - name: mysql_root_password
    prompt: enter root password
    private: no

  tasks:
  - name: install my-sql server
    ansible.builtin.dnf:
      name: mysql-server
      state: latest
  - name: start and enable mysql
    ansible.builtin.service:
      name: mysqld
      state: started
      enabled: yes

  # - name: installing pip
  #   ansible.builtin.dnf:
  #     name: python3-pip
  #     state: present



  - name: install python mysql dependencies
    ansible.builtin.pip:
      name:
      - PyMySQL
      - cryptography
      executable: pip3.9  
      # pip3.11 if python version is 3.11
   

# check password is aleready setup or not

  - name: check db connection
    community.mysql.mysql_info:
      login_user: root
      login_password: "{{mysql_root_password}}"
      login_host: "{{ login_host }}"
      filter: version
    ignore_errors: yes
    register: mysql_connection_output

  - name: printing output
    ansible.builtin.debug:
      msg: "output is :{{ mysql_connection_output }}."

  - name: setup root password
    ansible.builtin.command: "mysql_secure_installation --set-root-pass {{mysql_root_password}}"
    when: mysql_connection_output.failed is true # don't give {{}} in when and always use small true

